name: Build PROS CLI

on:
  push:
  pull_request:

jobs:
  update_build_number:
    runs-on: ubuntu-latest
    outputs:
      output1: ${{ steps.step1.outputs.test }}
    steps:
      - uses: actions/checkout@v2
      - name: Update Build Number
        id: step1
        run: |
              python3 version.py
              VER=$(cat version)
              echo "version=$VER" >> $GITHUB_ENV
              echo "::set-output name=test::1.1.1"
              

  build:
    needs: update_build_number
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
    - uses: actions/checkout@v2
    
    - name: Setup Python
      uses: actions/setup-python@v4.2.0
      with:
        python-version: 3.9.2
        cache: 'pip'
      if: matrix.os != 'macos-latest'
    
    - name: Setup Python MacOS
      run: |
            wget https://www.python.org/ftp/python/3.9.2/python-3.9.2-macos11.pkg
            sudo installer -verbose -pkg ./python-3.9.2-macos11.pkg -target /
            echo "/Library/Frameworks/Python.framework/Versions/3.9/bin" >> $GITHUB_PATH
      if: matrix.os == 'macos-latest'
        
    - name: Install Requirements
      run: python3 -m pip install --upgrade pip && pip3 install -r requirements.txt && pip3 uninstall -y typing
      
    - name: Run Pyinstaller
      run: |
            pyinstaller pros/cli/main.py --name=pros
            pyinstaller --onefile pros/cli/compile_commands/intercept-cc.py --name=intercept-cc
            pyinstaller --onefile pros/cli/compile_commands/intercept-cc.py --name=intercept-c++
      if: matrix.os != 'macos-latest'

    - name: Run Pyinstaller MacOS
      run: |
            pyinstaller pros/cli/main.py --name=pros --target-arch=universal2
            pyinstaller --onefile pros/cli/compile_commands/intercept-cc.py --name=intercept-cc --target-arch=universal2
            pyinstaller --onefile pros/cli/compile_commands/intercept-cc.py --name=intercept-c++ --target-arch=universal2
      if: matrix.os == 'macos-latest'

    - name: Upload Artifact
      uses: actions/upload-artifact@v2
      with:
        name: ${{ matrix.os }}-${{needs.job1.outputs.output1}}
        path: dist/*
